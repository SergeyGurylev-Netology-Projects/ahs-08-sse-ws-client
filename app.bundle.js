!function(){"use strict";const t=new class{constructor(t){this.url=`https://${t}/`,this.ws=new WebSocket(`wss://${t}/ws`),this.myName="",this.myPresentation="Вы",this.container=document.getElementById("chat"),this.containerData=this.container.querySelector(".chat-data"),this.containerLogins=document.getElementById("chat-users"),this.loginsList=this.containerLogins.querySelector(".chat-users--list"),this.formLogin=document.getElementById("chat-form-login"),this.formLoginInput=this.formLogin.querySelector(".chat-form-login--input"),this.formLoginTooltip=this.formLogin.querySelector(".chat-form-login--input-tooltip"),this.messagesList=this.container.querySelector(".chat-messages--list"),this.formChatMessage=document.getElementById("chat-form-messages"),this.formChatMessageInput=this.formChatMessage.querySelector(".chat-form-messages--input"),this.onLoginSubmit=this.onLoginSubmit.bind(this),this.onLoginInput=this.onLoginInput.bind(this),this.onChatMessageSubmit=this.onChatMessageSubmit.bind(this),this.onWSMessage=this.onWSMessage.bind(this),this.bindToDOM(),this.formLogin.classList.add("visible"),this.containerData.classList.remove("visible")}bindToDOM(){this.formLogin.addEventListener("submit",this.onLoginSubmit),this.formLoginInput.addEventListener("input",this.onLoginInput),this.formChatMessage.addEventListener("submit",this.onChatMessageSubmit),this.ws.addEventListener("message",this.onWSMessage)}initChat(t){if(0===t.status)return void this.formLoginInput.classList.add("invalid");this.myName=t.name,this.formLogin.classList.remove("visible"),this.containerData.classList.add("visible"),t.logins.forEach((t=>{this.addLoginItem(t)}));const s=JSON.stringify({action:"login",name:t.name});this.ws.send(s)}addLoginItem(t){if(this.loginsList.querySelector(`[data-name="${t.name}"]`))return;this.myName||(this.myName=t.name);const s=document.createElement("li");s.classList.add("chat-users--item"),s.innerHTML='\n    <div class="chat-users--item-icon"></div>\n    <span class="chat-users--item-name"></span>\n',s.dataset.name=t.name;const e=s.querySelector(".chat-users--item-name");t.name===this.myName?(e.textContent=this.myPresentation,e.classList.add("this-is-mine")):e.textContent=t.name,this.loginsList.appendChild(s)}removeLoginItem(t){const s=this.loginsList.querySelector(`[data-name="${t.name}"]`);s&&s.remove()}initMessages(t){this.messagesList.replaceChildren(),t.messages.forEach((t=>{this.addMessageItem(t)}))}addMessageItem(t){const s=`${new Date(t.created).toLocaleTimeString()} ${new Date(t.created).toLocaleDateString()}`,e=document.createElement("li");e.classList.add("chat-messages--item"),e.innerHTML='\n    <a class="chat-messages--item-title"></a>\n    <a class="chat-messages--item-message"></a>\n',e.dataset.id=t.id,e.dataset.name=t.name,e.dataset.created=t.created;const i=e.querySelector(".chat-messages--item-title"),n=e.querySelector(".chat-messages--item-message");n.textContent=t.message,t.name===this.myName?(i.textContent=`${this.myPresentation}, ${s}`,i.classList.add("this-is-mine"),n.classList.add("this-is-mine")):i.textContent=`${t.name}, ${s}`,this.messagesList.appendChild(e)}onLoginSubmit(t){t.preventDefault(),this.formLoginInput.classList.remove("invalid"),this.formLoginTooltip.classList.remove("visible");const{value:s}=this.formLoginInput;this.getLoginAvailableStatus(s).then((t=>{1===t.status||2===t.status?this.login(t.name).then((t=>{this.initChat(t)})):(0===t.status&&this.formLoginInput.classList.add("invalid"),this.formLoginTooltip.querySelector("span").textContent=String(t.description),this.formLoginTooltip.classList.add("visible"))}))}onLoginInput(){this.formLoginInput.classList.remove("invalid"),this.formLoginTooltip.classList.remove("visible");const{value:t}=this.formLoginInput;t&&this.getLoginAvailableStatus(t).then((t=>{0===t.status&&this.formLoginInput.classList.add("invalid")}))}onChatMessageSubmit(t){t.preventDefault();const{value:s}=this.formChatMessageInput;s&&(this.sendMessage(s).then((t=>{if(t.status>0){const s=JSON.stringify({action:"message",id:t.id});this.ws.send(s)}})),this.formChatMessageInput.value="")}async getLoginAvailableStatus(t){const s=`${this.url}login/${t}`,e=fetch(s,{method:"GET"});let i=await e;return i.ok?(i=await i.json(),i):(console.error(i),{status:-1,name:t,description:i})}async login(t){const s=`${this.url}login`,e=fetch(s,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:t})});let i=await e;return i.ok?(i=await i.json(),i):(console.error(i),{status:-1,name:t,description:i})}async sendMessage(t){const s=`${this.url}message`,e=fetch(s,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:this.myName,message:t})});let i=await e;return i.ok?(i=await i.json(),i):(console.error(i),{status:-1,description:i})}onWSMessage(t){const s=JSON.parse(t.data);switch(s.action){case"login":return void this.addLoginItem(s);case"logout":return void this.removeLoginItem(s);case"message":return void this.addMessageItem(s);case"initMessages":this.initMessages(s)}}beforeUnload(){const t=JSON.stringify({action:"unload",name:this.myName});this.ws.send(t)}}("ahs-08-sse-ws-server.onrender.com");window.addEventListener("beforeunload",(s=>t.beforeUnload(s)))}();